<%
Response.WriteMode = 'single';
Server.Execute( "include/user_init.html" );
//alert('catalog_list.html Request.Url='+Request.Url);
//for(_pr in Request.Query) alert(_pr+' = '+Request.Query.GetProperty(_pr));
contenttype = 'utf-8';//'windows-1251';
	
catalogName = Request.Query.catalog_name;
viewBase = view_types.GetChildByKey( Request.Query.HasProperty( 'view_type' ) && Request.Query.view_type != '' ? Request.Query.view_type : catalogName );

exchangeObjectType = common.exchange_object_types.GetOptChildByKey( catalogName );
dispName = exchangeObjectType != undefined ? exchangeObjectType.disp_name : '';
dispIndex = ArrayOptFind( viewBase.columns, 'order_code==dispName' );
dispIndex = dispIndex == undefined ? 0 : dispIndex.ChildIndex;

xqueryQual = Request.Query.HasProperty( 'xquery_qual' ) ? UrlDecode( Request.Query.xquery_qual ) : viewBase.xquery_qual;

hasColumns = Request.Query.HasProperty( 'has_columns' ) ? Request.Query.has_columns != '0' : true;

sortIndex = Request.Query.HasProperty( 'sort' ) ? Int( Request.Query.sort ) : 0;
sortDirect = Request.Query.HasProperty( 'descending' ) ? '-' : '+';

searchText = Request.Query.HasProperty( 'search_text' ) ? Request.Query.search_text : '';
filterId = Request.Query.HasProperty( 'filter' ) && Request.Query.filter != '' ? Request.Query.filter : '';

startIndex = Request.Query.HasProperty( 'start_index' ) && Request.Query.start_index != '' ? Int( Request.Query.start_index ) : 0;
endIndex = null;
if ( Request.Query.HasProperty( 'end_index' ) && Request.Query.end_index != "" )
	endIndex = Int( Request.Query.end_index );
else if ( Request.Query.HasProperty( 'num_index' ) && Request.Query.num_index != "" )
	endIndex = startIndex + Int( Request.Query.num_index ) - 1;


elementsArray = Request.Query.HasProperty( 'elements' ) ? String( Request.Query.elements ).split( ';' ) : null;
showAll = curUser.access.access_role == 'admin' || ( Request.Query.HasProperty( 'show_all' ) && Request.Query.show_all == '1' );

checkAccess = curUser.access.access_role != 'admin' && Request.Query.HasProperty( 'check_access' ) && Request.Query.check_access == '1';

overflowNum = Request.Query.HasProperty( 'overflow_num' ) && Request.Query.overflow_num != '' ? Int( Request.Query.overflow_num ): null;


Response.ContentType = "text/xml; charset=" + contenttype;
Response.Write( '<?xml version="1.0" encoding="' + contenttype + '"?><data>' );

if ( hasColumns )
{
	Response.Write( '<columns>' );
	for ( _column in viewBase.columns )
		Response.Write( '<col title="' + XmlAttrEncode( EncodeCharset( ( _column.web_const.HasValue ? tools_web.get_web_str( _column.web_const ) : eval( _column.title ) ), contenttype ) ) + '" width="' + _column.width + '"/>' );
	Response.Write( '</columns>' );
}

elemArray = Array();
elemArrayNum = 0;
overflowFlag = false;

curFilterCond = '';
if ( filterId != '' )
{
	curFilter = ArrayOptFind( lists.view_conditions_schemes, 'catalog==catalogName&&PrimaryKey==filterId' );
	if ( curFilter != undefined )
		curFilterCond = tools.create_filter_xquery( curFilter.conditions );
}

try
{
	sortFlag = false;
	if ( elementsArray != null )
	{
		arrCounter = 0;
		extArray = Array();
		for ( _elem in elementsArray )
			if ( _elem != '' )
				try
				{
					extArray[ arrCounter ] = Int( _elem );
					arrCounter++;
				}
				catch ( e )
				{
					alert( e );
				}
		elemArray = QueryCatalogByKeys( catalogName + 's', 'id', extArray );
		if ( searchText != '' )
			elemArray = ArraySelect( elemArray, 'StrContains(Xml,' + CodeLiteral( searchText ) + ',true)' );
		sortFlag = true;
	}
	else if ( catalogName == 'collaborator' && ! showAll )
	{
		elemArray = tools.get_sub_persons_by_func_manager_id( curUserID );
		if ( searchText != '' )
			elemArray = ArraySelect( elemArray, 'StrContains(Xml,' + CodeLiteral( searchText ) + ',true)' );
		sortFlag = true;
	}
	else
	{
		elemArray = XQuery( tools.create_xquery( catalogName, xqueryQual, curFilterCond, searchText, viewBase.columns.Child( sortIndex ).order, sortDirect ) );
	}
	
	if ( checkAccess )
	{
		resArray = Array();
		resArrayCounter = 0;
		for ( _elem in elemArray )
		{
			if ( tools_web.check_access( OpenDoc( UrlFromDocID ( _elem.PrimaryKey ), 'form=x-local://wtv/wtv_form_doc_access.xmd;ignore-top-elem-name=1' ).TopElem, curUserID, curUser, Session ) )
			{
				resArray[ resArrayCounter ] = _elem;
				resArrayCounter++;
			}
			if ( overflowNum != null && resArrayCounter > overflowNum )
				break;
		}
		elemArray = resArray;
	}

	elemArrayNum = ArrayCount( elemArray );
	overflowFlag = overflowNum != null && elemArrayNum > overflowNum;
	
	if ( ! overflowFlag && sortFlag )
		elemArray = ArraySort( elemArray, viewBase.columns.Child( sortIndex ).order_code, sortDirect );
}
catch ( ee )
{
	alert( ee );
}

messageStr = '';
if ( overflowFlag )
	messageStr = XmlAttrEncode( EncodeCharset( tools.get_web_str('cg_too_large'), contenttype ) );
else if ( elemArrayNum == 0 )
	messageStr = XmlAttrEncode( EncodeCharset( ( searchText == '' ? tools.get_web_str('cg_no_record') : tools.get_web_str('cg_no_search') ), contenttype ) );

Response.Write( '<rows num="' + elemArrayNum + '" startindex="' + startIndex + '" endindex="' + ( endIndex == null ? ( elemArrayNum == 0 ? 0 : elemArrayNum - 1 ) : endIndex ) + '" dispindex="' + dispIndex + '"' + ( overflowFlag ? ' overflownum="' + overflowNum + '"' : '' ) + ( messageStr == '' ? '' : ' message="' + messageStr + '"' ) + '>' );

arrTitileFlags = Array( ArrayCount( viewBase.columns ) );
for ( fldColumnElem in viewBase.columns )
	arrTitileFlags[ fldColumnElem.ChildIndex ] = StrContains( fldColumnElem.name, 'name' ) || StrContains( fldColumnElem.name, 'title' );

if ( ! overflowFlag )
{
	if ( startIndex == 0 && endIndex == null )
	{
		for ( ListElem in elemArray )
			try
			{
				_row_str = '';
				for ( fldColumnElem in viewBase.columns )
					_row_str += '<cell>' + HtmlEncode( EncodeCharset( ( arrTitileFlags[ fldColumnElem.ChildIndex ] ? tools_web.get_cur_lng_name( eval( fldColumnElem.name ) ) : eval( fldColumnElem.name ) ), contenttype ) ) + '</cell>';
				
				Response.Write( '<row id="' + ListElem.id + '">' + _row_str + '</row>' );
			}
			catch ( e )
			{
			}
	}
	else
	{
		_counter = 0;
		for ( ListElem in elemArray )
		{
			if ( _counter > endIndex )
				break;
				
			if ( _counter >= startIndex )
				try
				{
					_row_str = '';
					for ( fldColumnElem in viewBase.columns )
						_row_str += '<cell>' + HtmlEncode( EncodeCharset( ( arrTitileFlags[ fldColumnElem.ChildIndex ] ? tools_web.get_cur_lng_name( eval( fldColumnElem.name ) ) : eval( fldColumnElem.name ) ), contenttype ) ) + '</cell>';
					
					Response.Write( '<row id="' + ListElem.id + '">' + _row_str + '</row>' );
				}
				catch ( e )
				{
				}
			
			_counter++;
		}
	}
}

Response.Write( '</rows></data>' );
%>