<%
	Server.Execute( "include/user_init.html" );
	
	Request.QueryString.HasProperty("encoding") ? _encoding = Request.QueryString.encoding : _encoding = "windows-1251";
	
	MEGA_STR="<?xml version='1.0' encoding='windows-1251'?><data>";
	
	
	try
	{
		PA = OpenDoc(UrlFromDocID(Int(Request.QueryString.GetProperty("pa_id")))).TopElem;
	}
	catch(_gol_)
	{
		Response.Write( EncodeCharset(MEGA_STR + "</data>", _encoding) );
		Cancel();
	}

	
	MEGA_STR = MEGA_STR + "<![CDATA[";
	
	MEGA_STR = MEGA_STR + "<br/><h3>" + PA.assessment_appraise_type.ForeignElem.name + ". " + (PA.status.HasValue ? PA.status.ForeignElem.name : "") + "</h3><br/>";
	
	switch(PA.assessment_appraise_type)
	{
		case "competence_appraisal":
		
			MEGA_STR = MEGA_STR + '<table width="100%" border="0" cellspacing="0" cellpadding="3" border="1">';
			MEGA_STR = MEGA_STR + '<tr><td class="tableHeaderWithText">' + tools_web.get_web_str('ass_competence') + '</td><td class="tableHeaderWithText" width="50px">' + tools_web.get_web_str('ass_mark') + '</td></tr>';
			
			_counter = 0;
			for (_competence in PA.competences)
			{
				try
				{
					_competenceDoc = OpenDoc(UrlFromDocID(_competence.PrimaryKey)).TopElem;
				}
				catch(_nea_)
				{
					continue;
				}
				_class = _counter++ % 2 ? 'tableRowEven' : 'tableRowOdd';
				
				if(_competence.mark == "N")
				{
					_mrk = "N";
				}
				else
				{
					_mrk = _competenceDoc.scales.GetOptChildByKey(_competence.mark);
					if (_mrk != undefined)
					{
						_mrk = _mrk.name;
					}
					else
					{
						_mrk = _competence.mark;
					}
				}
				
				MEGA_STR = MEGA_STR + '<tr><td class="' + _class + '">' + HtmlEncode(_competenceDoc.name) + '</td><td class="' + _class + '" width="50px" align="center">' + _mrk + '</td></tr>';
				
			}
			
			MEGA_STR = MEGA_STR + "</table>"
			
			break;
	
		case "activity_appraisal":
		case "activity_plan":
			
			MEGA_STR = MEGA_STR + '<table width="100%" border="0" cellspacing="0" cellpadding="3" border="1">';
			MEGA_STR = MEGA_STR + '<tr><td class="tableHeaderWithText">'+tools_web.get_web_str('vkb_kpi')+'</td><td class="tableHeaderWithText" width="25%">' + tools_web.get_web_str('vkb_plan_value') + '</td>';
			
			if( PA.assessment_appraise_type == "activity_appraisal" )
			{
				MEGA_STR = MEGA_STR + '<td class="tableHeaderWithText" width="25%">'+tools_web.get_web_str('vkb_fact')+'</td><td class="tableHeaderWithText" width="50px">' + tools_web.get_web_str('ass_mark') + '</td>';
			}
			
			MEGA_STR = MEGA_STR + '<td class="tableHeaderWithText" width="50px">' + tools_web.get_web_str('vcpb_weight') + '</td></tr>';
			
			_counter = 0;
			for (_kpi in PA.kpis)
			{
				try
				{
					_kpiDoc = OpenDoc( UrlFromDocID(  _kpi.PrimaryKey )).TopElem;
				}
				catch(_opa_)
				{
					continue;
				}
				
				_class = _counter++ % 2 ? 'tableRowEven' : 'tableRowOdd';
				
				if (_kpiDoc.type == "scale")
				{
					_mrk = _kpiDoc.scales.GetOptChildByKey(_kpi.mark);
					if (_mrk != undefined)
					{
						_mrk = _mrk.name;
					}
					else
					{
						_mrk = _kpi.mark;
					}
				}
				else
				{
					_mrk = _kpi.mark;
				}
				
				
				MEGA_STR = MEGA_STR + '<tr><td class="' + _class + '">' + HtmlEncode(_kpiDoc.name) + '</td><td class="' + _class + '">' + HtmlEncode(_kpi.plan) + '</td>';
				
				if( PA.assessment_appraise_type == "activity_appraisal" )
				{
					MEGA_STR = MEGA_STR + '<td class="' + _class + '">' + HtmlEncode(_kpi.fact) + '</td><td class="' + _class + '">' + _mrk + '</td>';
				}
				MEGA_STR = MEGA_STR + '<td class="' + _class + '" width="50px" align="center">' + _kpi.weight + '</td></tr>';
				
				
			}
			
			MEGA_STR = MEGA_STR + "</table>";
			
			break;
	
		case "staffrating":
			
			MEGA_STR = MEGA_STR + '<table width="100%" border="0" cellspacing="0" cellpadding="3" border="1">';
			MEGA_STR = MEGA_STR + '<tr><td class="tableHeaderWithText">' + tools_web.get_web_str('vsb_purpose') + '</td><td class="tableHeaderWithText" width="50px">'+tools_web.get_web_str('vcpb_weight')+'</td><td class="tableHeaderWithText" width="30%">' + tools_web.get_web_str('vsb_expected_result') + '</td><td class="tableHeaderWithText" width="100px">'+ tools_web.get_web_str('c_date')+'</td><td class="tableHeaderWithText" width="30%">' + tools_web.get_web_str('vsb_actual_result') + '</td><td class="tableHeaderWithText" width="50px">' + tools_web.get_web_str('ass_mark') + '</td></tr>';
			
			for (_objective in PA.objectives)
			{
				MEGA_STR = MEGA_STR + '<tr><td class="tableRowEven">' + HtmlEncode(_objective.name) + '</td><td class="tableRowEven" align="center">' + _objective.weight + '</td><td class="tableRowEven" colspan="3">&nbsp;</td><td class="tableRowEven" align="center">' + _objective.mark + '</td></tr>';
				
				for (_subobjective in _objective.subobjectives)
				{
					MEGA_STR = MEGA_STR + '<tr><td class="tableRowOdd" colspan="2">&nbsp;</td><td class="tableRowOdd">' + HtmlEncode(_subobjective.plan) + '</td><td class="tableRowOdd" align="center">' + _subobjective.date + '</td><td class="tableRowOdd">' + _subobjective.fact + '</td><td class="tableRowOdd">' + _subobjective.mark + '</td></tr>';
				}
			
			}
			MEGA_STR = MEGA_STR + "</table>";
			
			break;
	
		case "development_plan":
			MEGA_STR = MEGA_STR + '<table width="100%" border="0" cellspacing="0" cellpadding="3" border="1">';
			MEGA_STR = MEGA_STR + '<tr><td class="tableHeaderWithText">' + tools_web.get_web_str('ass_competence') + '</td><td class="tableHeaderWithText" width="30%">'+ tools_web.get_web_str('vdb_development_method')+'</td><td class="tableHeaderWithText" width="30%">'+ tools_web.get_web_str('vdb_edu_method') + '/'+ tools_web.get_web_str('c_comment') +'</td></tr>';
			
			_counter = 0;
			for (_competence in PA.competences)
			{
				_foreigner = _competence.PrimaryKey.OptForeignElem;
				if (_foreigner == undefined)
					continue;
				
				_class = _counter++ % 2 ? 'tableRowEven' : 'tableRowOdd';
				
				MEGA_STR = MEGA_STR + '<tr><td class="' + _class + '">' + HtmlEncode(_foreigner.name) + '</td>';
				
				MEGA_STR = MEGA_STR + '<td class="' + _class + '">';
				for (_dp in _competence.development_methods)
				{
					_foreigner = _dp.PrimaryKey.OptForeignElem;
					if (_foreigner != undefined)
					{
						MEGA_STR = MEGA_STR + HtmlEncode(_foreigner.name) + ';';
					}
				}
				MEGA_STR = MEGA_STR + '&nbsp;</td><td class="' + _class + '">';
				
				for (_em in _competence.education_methods)
				{
					_foreigner = _em.PrimaryKey.OptForeignElem;
					if (_foreigner != undefined)
					{
						MEGA_STR = MEGA_STR + HtmlEncode(_foreigner.name) + '<br/>';
					}
				}
				
				MEGA_STR = MEGA_STR + HtmlEncode(_competence.comment) + "&nbsp;</td></tr>";
			}
			break;
			
		case "result":
			MEGA_STR = MEGA_STR + tools_web.get_web_str('ass_integral_mark') + ':' + PA.integral_mark;
			break;
	}
	
	
	MEGA_STR=MEGA_STR+"]]></data>";
	
	Response.Write(EncodeCharset((MEGA_STR), _encoding));
	

%>